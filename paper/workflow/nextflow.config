process {
    $Atropos {
        ext {
            compressionArg = { (compression == "nowriter" ? "--no-writer-process" : "--compression ${compression}") }
        }
    }
    
    $ShowSimulatedPerformance {
        ext {
            local_name = "simulated-performance-local"
            local_caption = "Execution time on simulated datasets for programs running on desktop with 4 parallel processes (threads). Each program was executed multiple times, and Atropos was run with combinations of alignment algorithm (insert-match or adapter-match) and output mode (worker-compression, writer-compression or parallel-write). The minimum and maximum execution times for each program are shown, with the lowest overall execution time in bold."
            cluster_name = "simulated-performance-local"
            cluster_caption = "Top: Execution time on simulated datasets for programs running on a cluster with 4, 8, or 16 parallel processes (threads). Each program was executed multiple times, and Atropos was run with all combinations of alignment algorithm (insert-match or adapter-match) and output mode (worker-compression, writer-compression or parallel-write). The minimum and maximum execution times for each program are shown, and notable results are highlighted in bold. Bottom: The minimum and maximum memory usage for each program across all executions."
        }
    }
    
    $ShowSimulatedAccuracy {
        ext {
            name = "simulated-accuracy"
            caption = "Trimming accuracy on simulated data with three different base-call error rates. Wrongly trimmed: reads that do not contain adapters but were trimmed anyway; Over-trimmed: reads that contain adapters but from which too many bases were removed; Under-trimmed: reads that contain adapters but from which too few bases were removed. Both read-level and base-level error rates are shown. Fractions of total reads/bases are in parentheses. The best tool(s) in each category is highlighted."
        }
    }
}

profiles {
    local {
        params {
            threadCounts = [ 4 ]
        }
        
        executor {
            name = "local"
            cpus = 4
            queueSize = 1
        }
        
        docker {
            enabled = true
        }
    }

    cluster {
        params {
            threadCounts = [ 4, 8, 16 ]
        }

        executor {
            name = 'sge'
            queueSize = 1
        }

        singularity {
            enabled = true
            runOptions = '-H $(pwd)'
        }
    }
}
